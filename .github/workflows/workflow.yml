# R action templates can be found at https://github.com/r-lib/actions

on:
    push:
    branches: [main]
    tags: '*.*.*'
pull_request:
    branches: [main]

name: primary-workflow

jobs:
    primary-workflow:
    runs-on: ubuntu-latest
env:
    GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    R_KEEP_PKG_SOURCE: yes

steps:

    # see https://github.com/actions/checkout
    - name: Checkout repo
      uses: actions/checkout@v2

# see https://github.com/r-lib/actions/tree/master/setup-r
- name: Setup R
  uses: r-lib/actions/setup-r@v1
  with:
    use-public-rspm: true

# see pandoc https://github.com/r-lib/actions/tree/master/setup-pandoc
- name: Install pandoc
  uses: r-lib/actions/setup-pandoc@v1

# see https://github.com/r-lib/actions/tree/master/setup-r-dependencies
# install packages listed in DESCRIPTION
- name: Install dependencies
  uses: r-lib/actions/setup-r-dependencies@v1
  with:
    extra-packages: |
      rcmdcheck
      pkgdown
      styler
      lintr
      covr

# see https://github.com/tidyverse/tidyverse/blob/main/.github/workflows/R-CMD-check.yaml
- name: Inspect packages
  run: |
    options(width = 100)
    pkgs <- installed.packages()[, "Package"]
    sessioninfo::session_info(pkgs, include_base = TRUE)
  shell: Rscript {0}

- name: Update data
  env:
    FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
  run: Rscript -e 'source("data-raw/fetch_datasets.R")'

# see https://github.com/r-lib/actions/tree/master/check-r-package
- name:  R CMD check
  uses: r-lib/actions/check-r-package@v1

- name: Show testthat output
  if: always()
  run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
  shell: bash

# https://github.com/r-lib/actions/blob/master/examples/test-coverage.yaml
- name: Test coverage
  run: covr::codecov()
  shell: Rscript {0}

# see https://github.com/actions/upload-artifact
- name: Upload check results
  if: failure()
  uses: actions/upload-artifact@main
  with:
    name: ${{ runner.os }}-r${{ matrix.config.r }}-results
  path: check

- name: Style Code
  run: Rscript -e 'styler::style_pkg()'

- name: Lint Code
  run: lintr::lint_package()
  shell: Rscript {0}

# confirm pkg will build prior to docker actions
- name: Build package
  run: R CMD INSTALL .

# see https://github.com/r-lib/actions/blob/f97616df3c9edac51d0ec265f6499b113e84b0cd/examples/pkgdown.yaml
- name: Deploy package
  run: |
    git config --local user.email "actions@github.com"
    git config --local user.name "GitHub Actions"
    Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'
